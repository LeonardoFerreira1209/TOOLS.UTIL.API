name: Build and deploy ASP.Net Core app to an Azure Web App
env:
  AZURE_WEBAPP_NAME: TOOLSUTILAPI    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '7.x'                 # set this to the .NET Core version to use
on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '38 14 * * 1'
permissions:
  contents: read
  
jobs:

  SONAR-CLOUD-BUILD:
    name: 'SONAR-CLOUD & BUILD'
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.x'
          include-prerelease: true
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secretS.TOKEN_GITHUB }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"LeonardoFerreira1209_TOOLS.UTIL.API" /o:"leonardoferreira1209" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
           dotnet build --configuration Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
  AZURE-QA:
  
    permissions:
      contents: none
    runs-on: windows-latest
    needs: SONAR-CLOUD-BUILD
    environment:
      name: 'AZURE-QA'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true
    
      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

        #substitute production appsettings entries to appsettings json file
      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: '${{env.DOTNET_ROOT}}/myapp/appsettings.json'
        env:
          ConnectionStrings.BaseDados: ${{ secrets.__CONNECTION_STRING_DATABASE__ }}
          ConnectionStrings.ServiceBus: ${{ secrets.__CONNECTION_STRING_SERVICEBUS__ }}
          ApplicationInsights.InstrumentationKey: ${{ secrets.__APPINSIGHTS_INSTRUMENTATION_KEY__ }}
          ApplicationInsights.ConnectionStringApplicationInsightsKey: ${{ secrets.__CONNECTION_STRING_APPLICATION_INSIGHTS_KEY__ }}
          ApplicationInsights.CloudRoleName: ${{ secrets.__CLOUD_ROLE_NAME__ }}
          Email.From: ${{ secrets.__EMAIL__ }}
          Email.Password: ${{ secrets.__PASSWORD__ }}
          Twillio.TwillioWhatsappNumber: ${{ secrets.__TWILLIO_WHATSAPP_NUMBER__ }}
          Twillio.TwillioPhoneNumber: ${{ secrets.__TWILLIO_PHONE_NUMBER__ }}
          Twillio.TwillioAccountSID: ${{ secrets.__TWILLIO_ACCOUNT_SID__ }}
          Twillio.TwillioAuthToken: ${{ secrets.__TWILLIO_AUTH_TOKEN__ }}
          ServiceBus.QueueUserEmail: ${{ secrets.__QUEUE_USER_EMAIL__ }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app-qa
          path: ${{env.DOTNET_ROOT}}/myapp
      
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app-qa
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
